// <auto-generated />
using System;
using CommissionX.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommissionX.Infrastructure.Migrations
{
    [DbContext(typeof(CommissionDataContext))]
    [Migration("20241011034306_AddInititalTables")]
    partial class AddInititalTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CommissionX.Core.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("CommissionX.Core.Entities.Rules.CommissionRule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CommissionRuleType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<string>("RateCalculationType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RuleContextType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("CommissionRules", (string)null);
                });

            modelBuilder.Entity("CommissionX.Core.Entities.Rules.TireCommissionRuleItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CommissionRuleId")
                        .HasColumnType("char(36)");

                    b.Property<int>("RateCalculationType")
                        .HasColumnType("int");

                    b.Property<string>("RuleContextType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("TierEnd")
                        .HasColumnType("int");

                    b.Property<int?>("TierStart")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CommissionRuleId");

                    b.ToTable("TireCommissionRuleItems", (string)null);
                });

            modelBuilder.Entity("CommissionX.Core.Entities.Rules.TireCommissionRuleItem", b =>
                {
                    b.HasOne("CommissionX.Core.Entities.Rules.CommissionRule", "CommissionRule")
                        .WithMany("TireCommissionRuleItems")
                        .HasForeignKey("CommissionRuleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CommissionRule");
                });

            modelBuilder.Entity("CommissionX.Core.Entities.Rules.CommissionRule", b =>
                {
                    b.Navigation("TireCommissionRuleItems");
                });
#pragma warning restore 612, 618
        }
    }
}
